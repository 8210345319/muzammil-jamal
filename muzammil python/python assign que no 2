{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "042d7bb1-5f68-45a8-916a-1e760ac9ee3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#python program to find the square of numbers in list using lambda and map function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c839ea71-aeb7-4eb6-a997-a86e1a68ea3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#lambda function and map function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6128db25-ec8c-4f96-ab94-4e79b691419b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n"
     ]
    }
   ],
   "source": [
    "l=[1,2,3,4,5,6,7,8,9,10]\n",
    "squares=map(lambda squr:squr*squr,l)\n",
    "print(list(squares))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f95454dd-a0cb-47b8-9a39-3533761e4a26",
   "metadata": {},
   "source": [
    "thus in above we get the output using lambda and map function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b808bf2-c474-4ddf-a2bc-1a6631a88262",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
