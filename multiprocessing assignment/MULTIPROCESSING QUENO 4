{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e447f0d-60cf-4a1f-bd64-1de822ccd0df",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Pool class is module used in mutiprocessing programme in python."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2eb4dea-1b9c-48fe-b2ec-4951326d26ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "#It allows us to create and manage process pools in pythons."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a618eb3-8b77-421a-ae3a-5b74224cad5a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#It supports asynchronous result with timeouts and callbacks and has a parallel map implementation.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b3c56b0-3e80-4b60-8a2e-9567a6ecde59",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Once we used the process pool , it can be closed and resources used by pool can be released."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ba157b9-07ff-4e77-96b8-88648ce115f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#It also provides a parallel version of builtin map() function for using task."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9ee05f1-2e95-4976-a8eb-775ce302e7d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Pool also can provide generic interface for executing  tasks with variable number of arguements."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
